%-------------------------------------------------------------------------------
% Constants
%-------------------------------------------------------------------------------

constStr.EC50_SR = 0.45;   % millimolar (in Ca_SR_release)
constStr.HSR = 2.5;   % dimensionless (in Ca_SR_release)
constStr.MaxSR = 15.0;   % dimensionless (in Ca_SR_release)
constStr.MinSR = 1.0;   % dimensionless (in Ca_SR_release)
constStr.kiCa = 500.0;   % per_millimolar_second (in Ca_SR_release)
constStr.kim = 5.0;   % per_second (in Ca_SR_release)
constStr.koCa = 10000.0;   % per_millimolar2_second (in Ca_SR_release)
constStr.kom = 660.0;   % per_second (in Ca_SR_release)
constStr.ks = 148041085.1;   % per_second (in Ca_SR_release)
constStr.CM_tot = 0.045;   % millimolar (in Ca_buffering)
constStr.CQ_tot = 10.0;   % millimolar (in Ca_buffering)
constStr.Mgi = 2.5;   % millimolar (in Ca_buffering)
constStr.TC_tot = 0.031;   % millimolar (in Ca_buffering)
constStr.TMC_tot = 0.062;   % millimolar (in Ca_buffering)
constStr.kb_CM = 542.0;   % per_second (in Ca_buffering)
constStr.kb_CQ = 445.0;   % per_second (in Ca_buffering)
constStr.kb_TC = 446.0;   % per_second (in Ca_buffering)
constStr.kb_TMC = 7.51;   % per_second (in Ca_buffering)
constStr.kb_TMM = 751.0;   % per_second (in Ca_buffering)
constStr.kf_CM = 1.642e6;   % per_millimolar_second (in Ca_buffering)
constStr.kf_CQ = 175.4;   % per_millimolar_second (in Ca_buffering)
constStr.kf_TC = 88800.0;   % per_millimolar_second (in Ca_buffering)
constStr.kf_TMC = 227700.0;   % per_millimolar_second (in Ca_buffering)
constStr.kf_TMM = 2277.0;   % per_millimolar_second (in Ca_buffering)
constStr.K_up = 0.000286113;   % millimolar (in Ca_intracellular_fluxes)
constStr.P_up_basal = 5.0;   % millimolar_per_second (in Ca_intracellular_fluxes)
constStr.slope_up = 5.0e-5;   % millimolar (in Ca_intracellular_fluxes)
constStr.tau_dif_Ca = 5.469e-5;   % second (in Ca_intracellular_fluxes)
constStr.tau_tr = 0.04;   % second (in Ca_intracellular_fluxes)
constStr.L_cell = 67.0;   % micrometre (in Cell_parameters)
constStr.L_sub = 0.02;   % micrometre (in Cell_parameters)
constStr.R_cell = 3.9;   % micrometre (in Cell_parameters)
constStr.V_i_part = 0.46;   % dimensionless (in Cell_parameters)
constStr.V_jsr_part = 0.0012;   % dimensionless (in Cell_parameters)
constStr.V_nsr_part = 0.0116;   % dimensionless (in Cell_parameters)
constStr.Cao = 1.8;   % millimolar (in Ionic_values)
constStr.Ki = 140.0;   % millimolar (in Ionic_values)
constStr.Ko = 5.4;   % millimolar (in Ionic_values)
constStr.Nao = 140.0;   % millimolar (in Ionic_values)
constStr.C = 5.7e-5;   % microF (in Membrane)
constStr.F = 96485.3415;   % coulomb_per_mole (in Membrane)
constStr.R2 = 8314.472;   % joule_per_kilomole_kelvin (R in Membrane)
constStr.T = 310.0;   % kelvin (in Membrane)
constStr.clamp_mode = 0.0;   % dimensionless (in Membrane)
constStr.Nai_clamp = 1.0;   % dimensionless (in Nai_concentration)
constStr.ACh = 0.0;   % millimolar (in Rate_modulation_experiments)
constStr.Iso_1_uM = 0.0;   % dimensionless (in Rate_modulation_experiments)
constStr.V_holding = -45.0;   % millivolt (in Voltage_clamp)
constStr.V_test = -35.0;   % millivolt (in Voltage_clamp)
constStr.t_holding = 0.5;   % second (in Voltage_clamp)
constStr.t_test = 0.5;   % second (in Voltage_clamp)
constStr.V_dL = -16.4508;   % millivolt (in i_CaL_dL_gate)
constStr.k_dL = 4.3371;   % millivolt (in i_CaL_dL_gate)
constStr.Km_fCa = 0.000338;   % millimolar (in i_CaL_fCa_gate)
constStr.alpha_fCa = 0.0075;   % per_second (in i_CaL_fCa_gate)
constStr.k_fL = 0.0;   % millivolt (in i_CaL_fL_gate)
constStr.shift_fL = 0.0;   % millivolt (in i_CaL_fL_gate)
constStr.P_CaL = 0.4578;   % nanoA_per_millimolar (in i_CaL)
constStr.offset_fT = 0.0;   % second (in i_CaT_fT_gate)
constStr.P_CaT = 0.04132;   % nanoA_per_millimolar (in i_CaT)
constStr.ACh_on = 1.0;   % dimensionless (in i_KACh)
constStr.g_KACh = 0.00345;   % microS (in i_KACh)
constStr.g_Kr = 0.00424;   % microS (in i_Kr)
constStr.g_Ks_ = 0.00065;   % microS (in i_Ks)
constStr.g_Kur = 0.1539e-3;   % microS (in i_Kur)
constStr.K1ni = 395.3;   % millimolar (in i_NaCa)
constStr.K1no = 1628.0;   % millimolar (in i_NaCa)
constStr.K2ni = 2.289;   % millimolar (in i_NaCa)
constStr.K2no = 561.4;   % millimolar (in i_NaCa)
constStr.K3ni = 26.44;   % millimolar (in i_NaCa)
constStr.K3no = 4.663;   % millimolar (in i_NaCa)
constStr.K_NaCa = 3.343;   % nanoA (in i_NaCa)
constStr.Kci = 0.0207;   % millimolar (in i_NaCa)
constStr.Kcni = 26.44;   % millimolar (in i_NaCa)
constStr.Kco = 3.663;   % millimolar (in i_NaCa)
constStr.Qci = 0.1369;   % dimensionless (in i_NaCa)
constStr.Qco = 0.0;   % dimensionless (in i_NaCa)
constStr.Qn = 0.4315;   % dimensionless (in i_NaCa)
constStr.blockade_NaCa = 0.0;   % dimensionless (in i_NaCa)
constStr.Km_Kp = 1.4;   % millimolar (in i_NaK)
constStr.Km_Nap = 14.0;   % millimolar (in i_NaK)
constStr.i_NaK_max = 0.08105;   % nanoA (in i_NaK)
constStr.delta_m = 1.0e-5;   % millivolt (in i_Na_m_gate)
constStr.g_Na = 0.0223;   % microS (in i_Na)
constStr.g_Na_L = 0.0;   % microS (in i_Na)
constStr.y_shift = 0.0;   % millivolt (in i_f_y_gate)
constStr.Km_f = 45.0;   % millimolar (in i_f)
constStr.alpha = 0.5927;   % dimensionless (in i_f)
constStr.blockade = 0.0;   % dimensionless (in i_f)
constStr.g_f = 0.00427;   % microS (in i_f)
constStr.g_to = 3.5e-3;   % microS (in i_to)

%%%------------------------------------------------------------------------
% Tranfer to GPU
%%%------------------------------------------------------------------------

% constStr.EC50_SR = gpuArray(constStr.EC50_SR);
% constStr.HSR = gpuArray(constStr.HSR);  
% constStr.MaxSR = gpuArray(constStr.MaxSR);
% constStr.MinSR = gpuArray(constStr.MinSR);
% constStr.kiCa = gpuArray(constStr.kiCa);
% constStr.kim = gpuArray(constStr.kim);
% constStr.koCa = gpuArray(constStr.koCa);
% constStr.kom = gpuArray(constStr.kom);
% constStr.ks = gpuArray(constStr.ks);
% constStr.CM_tot = gpuArray(constStr.CM_tot);
% constStr.CQ_tot = gpuArray(constStr.CQ_tot);
% constStr.Mgi = gpuArray(constStr.Mgi);
% constStr.TC_tot = gpuArray(constStr.TC_tot);
% constStr.TMC_tot = gpuArray(constStr.TMC_tot);
% constStr.kb_CM = gpuArray(constStr.kb_CM);
% constStr.kb_CQ = gpuArray(constStr.kb_CQ);
% constStr.kb_TC = gpuArray(constStr.kb_TC);
% constStr.kb_TMC = gpuArray(constStr.kb_TMC);
% constStr.kb_TMM = gpuArray(constStr.kb_TMM);
% constStr.kf_CM = gpuArray(constStr.kf_CM);
% constStr.kf_CQ = gpuArray(constStr.kf_CM);
% constStr.kf_TC = gpuArray(constStr.kf_TC);
% constStr.kf_TMC = gpuArray(constStr.kf_TMC);
% constStr.kf_TMM = gpuArray(constStr.kf_TMM);
% constStr.K_up = gpuArray(constStr.K_up);
% constStr.P_up_basal = gpuArray(constStr.P_up_basal);
% constStr.slope_up = gpuArray(constStr.slope_up);
% constStr.tau_dif_Ca = gpuArray(constStr.tau_dif_Ca);
% constStr.tau_tr = gpuArray(constStr.tau_tr);
% constStr.L_cell = gpuArray(constStr.L_cell);
% constStr.L_sub = gpuArray(constStr.L_sub);
% constStr.R_cell = gpuArray(constStr.R_cell);
% constStr.V_i_part = gpuArray(constStr.V_i_part);
% constStr.V_jsr_part = gpuArray(constStr.V_jsr_part);
% constStr.V_nsr_part = gpuArray(constStr.V_nsr_part);
% constStr.Cao = gpuArray(constStr.Cao);
% constStr.Ki = gpuArray(constStr.Ki);
% constStr.Ko = gpuArray(constStr.Ko);
% constStr.Nao = gpuArray(constStr.Nao);
% constStr.C = gpuArray(constStr.C);
% constStr.F = gpuArray(constStr.F);
% constStr.R2 = gpuArray(constStr.R2);
% constStr.T = gpuArray(constStr.T);
% constStr.clamp_mode = gpuArray(constStr.clamp_mode);
% constStr.Nai_clamp = gpuArray(constStr.Nai_clamp);
% constStr.ACh = gpuArray(constStr.ACh);
% constStr.Iso_1_uM = gpuArray(constStr.Iso_1_uM);
% constStr.V_holding =gpuArray(constStr.V_holding);
% constStr.V_test = gpuArray(constStr.V_test);
% constStr.t_holding = gpuArray(constStr.t_holding);
% constStr.t_test = gpuArray(constStr.t_test);
% constStr.V_dL = gpuArray(constStr.V_dL);
% constStr.k_dL = gpuArray(constStr.k_dL);
% constStr.Km_fCa = gpuArray(constStr.Km_fCa);
% constStr.alpha_fCa = gpuArray(constStr.alpha_fCa);
% constStr.k_fL = gpuArray(constStr.k_fL);
% constStr.shift_fL = gpuArray(constStr.shift_fL);
% constStr.P_CaL = gpuArray(constStr.P_CaL);
% constStr.offset_fT = gpuArray(constStr.offset_fT);
% constStr.P_CaT = gpuArray(constStr.P_CaT);
% constStr.ACh_on = gpuArray(constStr.ACh_on);
% constStr.g_KACh = gpuArray(constStr.g_KACh);
% constStr.g_Kr = gpuArray(constStr.g_Kr);
% constStr.g_Ks_ = gpuArray(constStr.g_Ks_);
% constStr.g_Kur = gpuArray(constStr.g_Kur);
% constStr.K1ni = gpuArray(constStr.K1ni);
% constStr.K1no = gpuArray(constStr.K1no);
% constStr.K2ni = gpuArray(constStr.K2ni);
% constStr.K2no = gpuArray(constStr.K2no);
% constStr.K3ni = gpuArray(constStr.K2no);
% constStr.K3no = gpuArray(constStr.K3no);
% constStr.K_NaCa = gpuArray(constStr.K_NaCa);
% constStr.Kci = gpuArray(constStr.Kci);
% constStr.Kcni = gpuArray(constStr.Kcni);
% constStr.Kco = gpuArray(constStr.Kco);
% constStr.Qci = gpuArray(constStr.Qci);
% constStr.Qco = gpuArray(constStr.Qco);
% constStr.Qn = gpuArray(constStr.Qn);
% constStr.blockade_NaCa = gpuArray(constStr.blockade_NaCa);
% constStr.Km_Kp = gpuArray(constStr.Km_Kp);
% constStr.Km_Nap = gpuArray(constStr.Km_Nap);
% constStr.i_NaK_max = gpuArray(constStr.i_NaK_max);
% constStr.delta_m = gpuArray(constStr.delta_m);
% constStr.g_Na = gpuArray(constStr.g_Na);
% constStr.g_Na_L = gpuArray(constStr.g_Na_L);
% constStr.y_shift = gpuArray(constStr.y_shift);
% constStr.Km_f = gpuArray(constStr.Km_f);
% constStr.alpha = gpuArray(constStr.alpha);
% constStr.blockade = gpuArray(constStr.blockade);
% constStr.g_f = gpuArray(constStr.g_f);
% constStr.g_to = gpuArray(constStr.g_to);


%-------------------------------------------------------------------------%
% constStr.T1 = gpuArray(constStr.T1);
% constStr.kbBAPTA = gpuArray(constStr.kbBAPTA);
% constStr.kfBAPTA = gpuArray(constStr.kfBAPTA);
% constStr.P_up = gpuArray(constStr.P_up);
% constStr.R = gpuArray(constStr.R);
% constStr.BAPTA_10_mM = gpuArray(constStr.BAPTA_10_mM);
% constStr.Cs_5_mM = gpuArray(constStr.Cs_5_mM);
% constStr.Iva_3_uM = gpuArray(constStr.Iva_3_uM);
% constStr.C_ratio = gpuArray(constStr.C_ratio);
% constStr.k_dT = gpuArray(constStr.k_dT);
% constStr.shift_dT = gpuArray(constStr.shift_dT);
% constStr.fT_shift = gpuArray(constStr.fT_shift);
% constStr.k_fT = gpuArray(constStr.k_fT);
% constStr.g_K1 = gpuArray(constStr.g_K1);
% constStr.alfa_Kr = gpuArray(constStr.alfa_Kr);
% constStr.alfa_NaCa = gpuArray(constStr.alfa_NaCa);
% constStr.V_cell = gpuArray(constStr.V_cell);
% constStr.V_nsr = gpuArray(constStr.V_nsr);
% constStr.V_jsr = gpuArray(constStr.V_jsr);
% constStr.V_sub = gpuArray(constStr.V_sub);
% constStr.V_i = gpuArray(constStr.V_i);
% constStr.Nai_cost = gpuArray(constStr.Nai_cost);
% constStr.RTONF = gpuArray(constStr.RTONF);
% constStr.i = gpuArray(constStr.i);
% constStr.Cs_5mM = gpuArray(constStr.Cs_5mM);
% constStr.i_f_shift = gpuArray(constStr.i_f_shift);
% constStr.Ca_isolated = gpuArray(constStr.Ca_isolated);
% constStr.y_inf_a = gpuArray(constStr.y_inf_a);
% constStr.y_inf_b = gpuArray(constStr.y_inf_b);
% constStr.y_inf_shift = gpuArray(constStr.y_inf_shift);
% constStr.y_inf_slope = gpuArray(constStr.y_inf_slope);
% constStr.tao_y_shift = gpuArray(constStr.tao_y_shift);
% constStr.mode = gpuArray(constStr.mode);
% constStr.Vx = gpuArray(constStr.Vx);
% constStr.n_inf_shift = gpuArray(constStr.n_inf_shift);
% constStr.n_inf_slope = gpuArray(constStr.n_inf_slope);
% constStr.Mut_tau_gain = gpuArray(constStr.Mut_tau_gain);
% constStr.Mut_m = gpuArray(constStr.Mut_m);
% constStr.Mut_q = gpuArray(constStr.Mut_q);
% constStr.dL_inf_shift = gpuArray(constStr.dL_inf_shift);
% constStr.dL_tau_gain = gpuArray(constStr.dL_tau_gain);
% constStr.fL_tau_gain = gpuArray(constStr.fL_tau_gain);
% constStr.m_inf_shift = gpuArray(constStr.m_inf_shift);
% constStr.m_inf_slope = gpuArray(constStr.m_inf_slope);
% constStr.m_tau_gain = gpuArray(constStr.m_tau_gain);
% constStr.h_inf_shift = gpuArray(constStr.h_inf_shift);
% constStr.h_inf_slope = gpuArray(constStr.h_inf_slope);
% constStr.h_tau_gain = gpuArray(constStr.h_tau_gain);
% constStr.g_NaL = gpuArrayconstStr.(g_NaL);
% constStr.pa_inf_shift = gpuArray(constStr.pa_inf_shift);
% constStr.pa_inf_slope = gpuArray(constStr.pa_inf_slope);
% constStr.piy_inf_shift = gpuArray(constStr.piy_inf_shift);
% constStr.piy_inf_slope = gpuArray(constStr.piy_inf_slope); 
% constStr.piy_tau_gain = gpuArray(constStr.piy_tau_gain);
% constStr.ACh_if_shift_ON  = gpuArray(constStr.ACh_if_shift_ON);
% constStr.ACh_block_ICaL_ON  = gpuArray(constStr.ACh_block_ICaL_ON);
% constStr.ACh_bup_ON = gpuArray(constStr.ACh_bup_ON);
% constStr.IKACh_ON = gpuArray(constStr.IKACh_ON);
% constStr.Iso_shift_If = gpuArray(constStr.Iso_shift_If);
% constStr.Iso_INaK_increase = gpuArray(constStr.Iso_INaK_increase);
% constStr.Iso_ICaL_increase = gpuArray(constStr.Iso_ICaL_increase);
% constStr.Iso_shift_dL = gpuArray(constStr.Iso_shift_dL);
% constStr.Iso_slope_dL = gpuArray(constStr.Iso_slope_dL);
% constStr.Iso_IKs_increase = gpuArray(constStr.Iso_IKs_increase);
% constStr.Iso_shift_n = gpuArray(constStr.Iso_shift_n);
% constStr.Iso_b_up = gpuArray(constStr.Iso_b_up);
% constStr.g_ratio = gpuArray(constStr.g_ratio);
% constStr.V_WT = gpuArray(constStr.V_WT);
% constStr.k_WT = gpuArray(constStr.k_WT);
% constStr.V_R231C = gpuArray(constStr.V_R231C);
% constStr.k_R231C = gpuArray(constStr.k_R231C);
% constStr.R231C = gpuArray(constStr.R231C);
% constStr.shift_dL = gpuArray(constStr.shift_dL);
% constStr.shift_Kup = gpuArray(constStr.shift_Kup);
% constStr.K_iso_slope_dL = gpuArray(constStr.K_iso_slope_dL);
% constStr.K_iso_increase = gpuArray(constStr.K_iso_increase);
% constStr.K_iso_shift = gpuArray(constStr.K_iso_shift);
% constStr.shift = gpuArray(constStr.shift);
% constStr.alfa_gKs = gpuArray(constStr.alfa_gKs);
% constStr.g_Ks = gpuArray(constStr.g_Ks);
% constStr.ACh_shift = gpuArray(constStr.ACh_shift);
% constStr.b_up = gpuArray(constStr.b_up);
% constStr.i_KACh = gpuArray(constStr.i_KACh);
% constStr.Iso_increase_1 = gpuArray(constStr.Iso_increase_1);
% constStr.Iso_increase_2 = gpuArray(constStr.Iso_increase_2);
% constStr.iso_shift_1 = gpuArray(constStr.iso_shift_1);
% constStr.iso_shift_2 = gpuArray(constStr.iso_shift_2);
% constStr.iso_shift_dL = gpuArray(constStr.iso_shift_dL);
% constStr.iso_slope_dL = gpuArray(constStr.iso_slope_dL);